<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[拙答知乎问题：如何评价《DOOM》(2016) 的关卡设计水平？]]></title>
      <url>%2F2016%2F12%2F26%2F%E6%8B%99%E7%AD%94%E7%9F%A5%E4%B9%8E%E9%97%AE%E9%A2%98%EF%BC%9A%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7-DOOM-2016-%E7%9A%84%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E6%B0%B4%E5%B9%B3%EF%BC%9F%2F</url>
      <content type="text"><![CDATA[回答这个知乎问题主要是想总结一下圣诞假期玩《DOOM》的感受，结果是不得不仔细考虑了一些没有进入意识的问题，并且不得不调查确认一些东西。果然也是一次学习，虽然很粗浅上不来台面（考虑到读者多半是玩家，所以简化了好些概念），但特留此作为笔记存档。 作者：北南 链接：https://www.zhihu.com/question/53570737/answer/137825836 来源：知乎 著作权归作者所有，转载请联系作者获得授权。 顶 @doomer3 的回答。 我并不是 FPS 死忠，也是游戏设计外行，但也算喜欢 ID 的 FPS 风格吧，所以从一个普通玩家的角度来随便聊聊正在单人通关途中的体会吧。非专业感觉脱离“关卡设计”之外的元素来谈“关卡设计”挺难的，所以可能会不时跑下题。 个人感觉总体上延续了 ID 这个公司关卡设计的特色，吸收了当代 FPS 关卡设计的主流理念，同时有所创新，大致算是新瓶装旧酒吧。在其他几位答主基础上补充几个体会（PS4）： 《DOOM》（2016）的关卡设计在地形路线方面保留了《DOOM》系列峰回路转的特点，螺旋地形的设计在不影响新鲜感的同时对关卡整体面积作了限制，你会发现查看地图的时候不需要大量缩进操作就可以看清富含细节的全景。但和当年相比，可能因为手头资源多，并没有做（到）那种记忆中几乎有点“回文”味道的极限设计，我是没有什么意见啦。 战斗场景三维化扩大化。早期《DOOM》的特色就是所谓“回廊射击”（Corridor Shooter）的平面战斗（从 2.5D 到 初代 Xbox 上都是这样），虽然有垂直空间的元素，但敌人很少会充分利用空间地形来进攻玩家。其实《Quake》系列以及很多以前的 ID 游戏已经是有地形，但敌人一般也都是布置好的很少会主动改变位置利用三维地形来立体攻击。《DOOM》（2016）就不一样了，首先有了类似《Left 4 Dead》式高速移动、擅长攀爬跳跃、远近都能攻击的 Imps，那么关卡的战斗场景里面就会有各种集装箱堆和廊柱给这些敌人舞台，你会发现敌人很少从同一个空间高度来进攻你，战斗空间也比记忆中的 ID 游戏要开阔很多。 在战斗场景方面，还吸取了当前很多主流 FPS 和冒险游戏的爆炸物设计，在前期缺武器缺乏的时候，各种小战场都有足够利用的场景爆炸物比如油桶，这样就在鼓励刚正面的奖励机制上，进一步降低了主机上手柄瞄准的难度。并且《DOOM》（2016）里面的那些炸药桶是可以搬运的，所以在有些需要手动开启的打斗场景（比如需要按一些机器按钮才能引出的敌人），你有足够的时间用爆炸物仔细布阵来打出一些两三个连环爆炸就能解决一大票敌人的玩法来，配合上面说的三维场景化，布阵会显得更有深度。后期因为武器花式繁多，爆炸物的用处和乐趣就没有那么大了，不过后面人物能力可以升级成场景爆炸物不会炸伤自己，血少的时候有那么两个桶还是会有奇效的。 @doomer3 提到分支路线造成的冲淡主线的问题，这点可能见仁见智，追求最速通关加无双的玩家可能会发现节奏会有断续。我个人可能因为技术一般反而庆幸有这个设计：不少战斗没有像同类游戏那样严格限定任务区域（mission region）。到中后期战斗中间我经常需要回头补血和弹药，意外发现《DOOM》（2016）在这点上相当的宽容，到 1.09 版为止我在很多战斗中都可以中途回头狂捡垃圾，甚至脱身去打一个 Rune Trial 挑战迷你游戏之后回来再接着战斗都行（有种回家冲了个澡换了身衣服的感觉），虽然有些关键战斗是锁了门群殴的。题外话：从 Rune Trial 就可以看出，这里面有当代 AAA 游戏插入迷你游戏作为调剂或者技能练习的影响，比如《Far Cry 3》里面类似的 Rune 挑战就差不多是练各种武器的；《DOOM》（2016）的挑战赛在这基础上还给了装备升级的奖励。 像 @doomer3 说的，关卡设计突出探索乐趣。补充一点：这一代里面随着主角能力的改变在空间设计上有变化，跟以往我玩过的 ID 游戏最突出的区别就是两段跳的引入，我之前没有玩过有两段跳的第一人称游戏（虽然在第三人称中也是比较平常的设计），所以这个在我眼里是一个比较关键的微创新：ID 自己过去主要用电梯和《Quake III》开始的“弹床”这些道具来扩展垂直移动范围；同时代的 FPS 强调用载具比如《Far Cry 3》引入的滑翔翼来扩展活动范围，但主角肉身的行动能力是很受限制的。《DOOM》（2016）里有了两段跳之后，关卡的垂直和水平空间就迅速放大了，也进一步激发了人探索关卡的欲望，我很快就喜欢到各种看起来很高很远的边缘处玩命试两段跳是不是能够得着，然后摔死很多次！而且从高处往下跳也变得非常简单，有些“万丈”深渊你可以在落地前来一个第二段跳来缓冲（虽然这游戏大部分时候的关卡高度都设计成落地不怎么费血），有了这个技术你在垂直空间上寻找秘密的欲望就会很强烈。 再说说探索中的寻路。可能因为要保持《DOOM》系列的阴暗色调又不至于让玩家找不着北，跟 2.5D 时代相比，关卡从图像和声音上给了玩家大量微妙的寻路线索（ @李易航 ），这点其实和同时代的 FPS 或者一人称冒险游戏的手法是一致的。先说图像。比如可以跳跃攀爬的地方都有各种一对绿色小灯或者类似的发光物给予提示；各种入口和按键都有能和环境区分的小面积醒目色彩和光照表现，90 年代的 红／黄／蓝读卡器，在性能约束下完成了历史使命，但不免过于简单粗暴；目前的主机画面细节非常之多，所以视觉提示上要想同时做到“醒目”、不过分剧透而又“和谐”“有设计感”，《DOOM》以及现在主流的视效做法感觉是比较有效的。 接着图像再说关卡中的声音设计，基本上所有值得你看一眼的东西都做了精细的声音设计，因此有名堂的物品和区域往往都是发声体，你如果在留意视效的微妙设计基础上再用用耳朵，一般就能猜出其作用不寻常。除了这些静态的声音设计之外，玩家处在不同环境下会有相应的环境声学效果比如混响，能给玩家比较到位的飞船、山洞、大厅等环境的空间印象；声音的音量和频率会模拟物理上“近大远小”等衰减效果；发声体的声音在玩家经过时会根据玩家移动速度出现仿多普勒效应的变调处理，从而令玩家更容易发现这些物体 … 当然这些也是这个时代 AAA 游戏的标配了。《DOOM》（2016）用的就是音频引擎（中间件） Wwise 来实现这些互动音频处理的。再说个关卡的题外话，一般游戏关卡中（其实是系统声音设计的结果）主角的脚步声一般都要精心设计，比如走或者跑，踩到什么材质都需要播放相应的声音，但 ID 的独特之处就是它旗下的主角是不怎么有脚步声的，这里除了跳跃落地时有以外平时一般走多快都听不到，这点可能只是那个年代的传统（包括《Duke Nukem 3D》）也可能是为了突出其它声音的一种设计选择（没有研究不好乱讲）。声音设计方面的细节可以参考 《DOOM》（2016）音频团队的访谈：The Sound Design Of《DOOM》- Exclusive Q&amp;A 随便瞎聊了下，请多包涵～]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[你好 Hexo]]></title>
      <url>%2F2016%2F12%2F25%2FHello-Hexo-%E4%BD%A0%E5%A5%BD-Hexo%2F</url>
      <content type="text"><![CDATA[为什么开博？为什么花力气自己在 GitHub 开这个博？原因有三。 写读整理平时的阅读浏览，如果不加整理很容易进入碎片式学习的陷阱：走马观花，不假思索。时间实际上白花了。开博客强制自己打开窗户自说自话，因为要让路人看明白，所以不得不教学相长。 虽有佳（嘉）肴，弗食，不知其旨也；虽有至道，弗学，不知其善也。是故学然后知不足，教后知困。知不足，然后能自反也。知困，然后能自强也。故曰：教学相长也。（选自《十三经注疏》） 交流分享再小的心得都会有人需要或在行，路人对帖子或受益，或质疑，或更正，思想碰撞后可以共同进步。 传统第三方服务的缺陷网络发布平台的寿命无保障。多年来博客服务走马灯地换，要么被墙要么官方弃坑，但网络平台的现实就是用户得准备周期性搬家，周期性断链。关站前好点的会提醒备份，但备份结果绑定为各个网站自己的格式，迁移难度大，有的平台甚至直接关站。所以还是自己把握本地内容和一套客户端发布工具，随时切换发布平台比较好。 第三方平台流程死板。多数 Web 发布平台的发布流程都依赖在线操作，不方便在本地验证，难以自定义流程，比如难以版本控制和本地备份。程序员出身的我总想本地编辑测试、版本控制、迭代发布，并且琢磨出一键流程，让精力能完全集中在内容上。 微信公众号。公众号确实容易传播，并自带订阅和访问统计这些专业功能，但它的思路是传统出版物的一次性发布，作为末端发布节点不错，而写作和快速迭代很不方便。本地写好的东西格式经常需要调整，接下来迭代就需要各种手机加电脑的操作。最让我头痛的是它不让改刊名这个设定。 GitHub 这类代码托管网站给了技术人员开博的可能性，通过纯文本标记格式比如 Markdown 创建内容，再通过 GitHub Pages 这类系统发布，这种大半在本地、末端在远程的流程容易迭代和备份，内容控制在自己手里，发布管线可以自己定制，未来迁移会很方便。 怎么开博？理顺了“其事”（在 GitHub 开博），下一步便是“其器”。GitHub Pages 只是一个空架子，目前适合个人站点的正道是找到静态站点生成器来管理所有管线方面内容（依赖服务器端操作的动态站点可以不考虑），保证在整个创作发布迭代流程中自己能集中写作。 我对工具的要求： 支持 Markdown 写作。 上手快。 迭代速度快。 于是断断续续测试了几个工具，终于落户到了 Hexo 上。个人对 Jekyll、Hugo ，GitBook 和 Hexo 的比较（此时此地调查的结论，未来发展恕不考虑）： Jekyll 优点：历史悠久，GitHub Pages 官方推荐的生成器，支持文档很多。 缺点：操作繁琐，生成速度慢（Ruby），不易调试。 结论：流程中太多技术细节。不采用。 我跟着一个点击率较高的 Jekyll 的教程，一开始照做没有成功，开始以为是我太小白，后来发现发一篇 Hello World 帖子居然要花 10 分钟才能在 GitHub 远程更新完毕，之前会一直是 404。另外 Jekyll 自带主题对 Unicode （比如中文）的支持似乎不够完全，调试信息也不完整。看不到远程页面生成错误。更糟糕的是，当时因为也想顺带测试一下 GitHub 平台本身，结果因为 Jekyll 的体验严重影响了信心。 Hugo 优点：支持 Markdown 写作，生成速度快，流程比 Pages 有所改善，营销手段不错。 缺点：操作繁琐，本地和远程发布的 UX 没有理顺，文档很不足。 结论：上手不易，流程还是有冗余。不采用。 采用 21 世纪系统编程语言 GO 编写的 Hugo 的卖点非常清晰（Make the Web Fun Again, Fast and Powerful 等等标语十分打眼），Google 上搜 Jekyll 替代品第一个出现就是它，立刻就被吸引住了。但跟随官方的2分钟上手教程以及补充的 GitHub 流程做了一遍却还是没能在 GitHub 发布成功（404），配套的 Youtube 视频也没有解释 GitHub 的部分。技术上最突出的弱点就是发布（public）文件夹和站点源需要分开管理，两套 git repo，每套的垂直流程中都包含了各种版本控制操作，想象一下 git 本来就精深的合并、分支、树结构操作等等各种命令行控制乘以 2 … 流程还是过于繁琐。文档的弱点是没有讲清楚例子中的 GitHub 端 repo 设置。结局是承诺两分钟搞定的上手示例（往 GitHub 发布 Hello World 页面），我用了两个小时，各种 google 搜索后不幸还是没有搞定。Hugo 生成速度优势在部署成功之前是体会不到的，所以还是不够满意。这点上，自己日常工作中的产品和服务上也要多加打磨。 GitBook 优点：支持 Markdown，对书籍发布和软件文档有较好支持，和传统文档格式互动方便（PDF, MS WORD, Open Office），与出版业接轨。 缺点：不是为博客而设计，博客流程不自然，主要支持手动 Web 发布。 结论：不采用。 因为有比较明显的缺点，虽然试都没试，不过如果有朝一日要发布系统研究成果且不需要大范围更新的话，GitBook 非常合适。 Hexo 优点：支持 Markdown，生成速度快，本地-远程流程足够清晰。 缺点：版本控制流程不透明，资源替换不直观。 结论：采用。 Hexo 是上述测试过的系统中唯一做到了两分钟发布成功的。它不用像 Hugo 那样操心发布版（gh-pages），也没有复杂的 git 操作：new, generate, server, deploy 四个命令基本上可以解决创作、本地测试、远程发布的迭代。这些让我觉得设计者在 UX 方面很贴心。上手教程和其它教程中顾及了本地和远程。但缺点也不是没有，替换已发布图片素材这些操作还是要手动找到文件。此外，它完全不需要手动版本控制，但副作用是自己也不方便做精细控制。但这些跟核心流程的便利相比都是小事，有办法克服，比如跟代码相关的文章中，源码可以独立开 repo 做版本控制。 怎么写？我非常肯定我的发布频率会很低，能否坚持还是取决于热情。不求天天创新，只求有经得起时间考验的东西。但不管怎么样，工具方便了对懒病还是有用的吧：如果打开 Sublime 甚至 Terminal 就能开写，比起网速不详时登录第三方服务，用邮箱密码登录，然后冒所有在线编辑的风险长篇大论来说还是诱人多了。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F25%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
